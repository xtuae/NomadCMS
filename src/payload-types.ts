/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    places: Place;
    header: Header;
    footer: Footer;
    blogs: Blog;
    pages: Page;
    forms: Form;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    places: PlacesSelect<false> | PlacesSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    blogs: BlogsSelect<false> | BlogsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "places".
 */
export interface Place {
  id: number;
  countryName: string;
  image: string;
  imageMedia?: (number | null) | Media;
  continent: string;
  costPerDay: number;
  internetSpeed: number;
  safetyScore: number;
  monthlyCost: string;
  visaDuration: string;
  visaFees: string;
  specialRequirements?: string | null;
  overallScore: number;
  climate?: string | null;
  nightlife: number;
  wellness: number;
  communityscore: number;
  crimerate: string;
  city_one?: string | null;
  city_two?: string | null;
  minimum_incom?: string | null;
  processing_time?: string | null;
  country_description?: string | null;
  city_oneinfo?: string | null;
  city_twoinfo?: string | null;
  steps_apply?: string | null;
  why_choose?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo?: (number | null) | Media;
  title: string;
  links?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  brand: {
    logo: number | Media;
    title: string;
    description?: string | null;
  };
  socialLinks?:
    | {
        platform: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  quickLinks?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  tools?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  resources?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  contactus?: {
    address?: string | null;
    email?: string | null;
    phone?: string | null;
    note?: string | null;
  };
  copyright?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: number;
  title: string;
  slug: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  author: number | User;
  /**
   * Upload an image from Media library
   */
  coverImage?: (number | null) | Media;
  /**
   * Or provide a direct image URL (CDN, Unsplash, etc.)
   */
  coverUrl?: string | null;
  publishedAt?: string | null;
  isPublished?: boolean | null;
  seo: {
    metaTitle: string;
    metaDescription?: string | null;
    /**
     * Used for Open Graph / Twitter sharing
     */
    metaImage?: (number | null) | Media;
    /**
     * Comma separated keywords
     */
    keywords?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug: string;
  pageType: 'home' | 'about' | 'contact' | 'privacy' | 'community' | 'support';
  home_hero?: {
    prefix_title?: string | null;
    headline?: string | null;
    subheadline?: string | null;
    paragraph?: string | null;
    backgroundImage?: (number | null) | Media;
    testimonial_head?: string | null;
    testimonial_quote?: string | null;
    testimonials?:
      | {
          authorName?: string | null;
          authorAvatar?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
    socialLinks?:
      | {
          platform?: string | null;
          url?: string | null;
          icon?: ('facebook' | 'instagram' | 'twitter' | 'youtube') | null;
          id?: string | null;
        }[]
      | null;
  };
  hero?: {
    headline?: string | null;
    subheadline?: string | null;
    backgroundImage?: (number | null) | Media;
    ctaText?: string | null;
    ctaLink?: string | null;
  };
  mission?: {
    title?: string | null;
    intro?: string | null;
    circles?:
      | {
          title?: string | null;
          description?: string | null;
          color?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  mission_last?: string | null;
  Section_title?: string | null;
  title_describtion?: string | null;
  whatWeDo?:
    | {
        icon?: string | null;
        title?: string | null;
        description?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  Contact_hero?: {
    headline?: string | null;
    subheadline?: string | null;
    backgroundImage?: (number | null) | Media;
  };
  contactEmail?: string | null;
  contactPhone?: string | null;
  contactAddress?: string | null;
  privacyHeader?: {
    headline?: string | null;
    subheadline?: string | null;
    backgroundImage?: (number | null) | Media;
  };
  privacyText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  communityIntro?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  communityLinks?:
    | {
        label?: string | null;
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  main_banner?: {
    heading?: string | null;
    subheading?: string | null;
    backgroundImage?: (number | null) | Media;
  };
  faq?:
    | {
        question?: string | null;
        answer?: string | null;
        id?: string | null;
      }[]
    | null;
  contacts?:
    | {
        title?: string | null;
        email?: string | null;
        id?: string | null;
      }[]
    | null;
  address?: {
    company?: string | null;
    street?: string | null;
    city?: string | null;
    phone?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  formType: 'contact' | 'inquiry';
  name: string;
  email: string;
  message?: string | null;
  country?: (number | null) | Place;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'places';
        value: number | Place;
      } | null)
    | ({
        relationTo: 'header';
        value: number | Header;
      } | null)
    | ({
        relationTo: 'footer';
        value: number | Footer;
      } | null)
    | ({
        relationTo: 'blogs';
        value: number | Blog;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "places_select".
 */
export interface PlacesSelect<T extends boolean = true> {
  countryName?: T;
  image?: T;
  imageMedia?: T;
  continent?: T;
  costPerDay?: T;
  internetSpeed?: T;
  safetyScore?: T;
  monthlyCost?: T;
  visaDuration?: T;
  visaFees?: T;
  specialRequirements?: T;
  overallScore?: T;
  climate?: T;
  nightlife?: T;
  wellness?: T;
  communityscore?: T;
  crimerate?: T;
  city_one?: T;
  city_two?: T;
  minimum_incom?: T;
  processing_time?: T;
  country_description?: T;
  city_oneinfo?: T;
  city_twoinfo?: T;
  steps_apply?: T;
  why_choose?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  title?: T;
  links?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  brand?:
    | T
    | {
        logo?: T;
        title?: T;
        description?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  quickLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  tools?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  resources?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  contactus?:
    | T
    | {
        address?: T;
        email?: T;
        phone?: T;
        note?: T;
      };
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs_select".
 */
export interface BlogsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  content?: T;
  author?: T;
  coverImage?: T;
  coverUrl?: T;
  publishedAt?: T;
  isPublished?: T;
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
        metaImage?: T;
        keywords?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  pageType?: T;
  home_hero?:
    | T
    | {
        prefix_title?: T;
        headline?: T;
        subheadline?: T;
        paragraph?: T;
        backgroundImage?: T;
        testimonial_head?: T;
        testimonial_quote?: T;
        testimonials?:
          | T
          | {
              authorName?: T;
              authorAvatar?: T;
              id?: T;
            };
        socialLinks?:
          | T
          | {
              platform?: T;
              url?: T;
              icon?: T;
              id?: T;
            };
      };
  hero?:
    | T
    | {
        headline?: T;
        subheadline?: T;
        backgroundImage?: T;
        ctaText?: T;
        ctaLink?: T;
      };
  mission?:
    | T
    | {
        title?: T;
        intro?: T;
        circles?:
          | T
          | {
              title?: T;
              description?: T;
              color?: T;
              id?: T;
            };
      };
  mission_last?: T;
  Section_title?: T;
  title_describtion?: T;
  whatWeDo?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        color?: T;
        id?: T;
      };
  Contact_hero?:
    | T
    | {
        headline?: T;
        subheadline?: T;
        backgroundImage?: T;
      };
  contactEmail?: T;
  contactPhone?: T;
  contactAddress?: T;
  privacyHeader?:
    | T
    | {
        headline?: T;
        subheadline?: T;
        backgroundImage?: T;
      };
  privacyText?: T;
  communityIntro?: T;
  communityLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  main_banner?:
    | T
    | {
        heading?: T;
        subheading?: T;
        backgroundImage?: T;
      };
  faq?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  contacts?:
    | T
    | {
        title?: T;
        email?: T;
        id?: T;
      };
  address?:
    | T
    | {
        company?: T;
        street?: T;
        city?: T;
        phone?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  formType?: T;
  name?: T;
  email?: T;
  message?: T;
  country?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}